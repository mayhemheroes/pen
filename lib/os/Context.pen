import System'Context { FfiNumberResult, FfiStringResult }
import System'NormalFile { NormalFile }

import foreign "c" _pen_os_read_stdin \() FfiStringResult
import foreign "c" _pen_os_read_limit_stdin \(number) FfiStringResult
import foreign "c" _pen_os_write_stdout \(string) FfiNumberResult
import foreign "c" _pen_os_write_stderr \(string) FfiNumberResult
import foreign "c" _pen_os_open_file \(string, OpenOptions) FfiOpenResult
import foreign "c" _pen_os_read_file \(NormalFile) FfiStringResult
import foreign "c" _pen_os_read_limit_file \(NormalFile, number) FfiStringResult
import foreign "c" _pen_os_write_file \(NormalFile, string) FfiNumberResult
import foreign "c" _pen_os_copy_file \(string, string) FfiNoneResult
import foreign "c" _pen_os_move_file \(string, string) FfiNoneResult
import foreign "c" _pen_os_remove_file \(string) FfiNoneResult
import foreign "c" _pen_os_read_directory \(string) FfiReadDirectoryResult
import foreign "c" _pen_os_create_directory \(string) FfiNoneResult
import foreign "c" _pen_os_remove_directory \(string) FfiNoneResult
import foreign "c" _pen_os_get_arguments \() array'Array
import foreign "c" _pen_os_get_environment_variable \(string) FfiStringResult
import foreign "c" _pen_os_read_metadata \(string) FfiMetadataResult
import foreign "c" _pen_os_tcp_bind \(string) FfiTcpListenerResult
import foreign "c" _pen_os_tcp_connect \(string) FfiTcpStreamResult
import foreign "c" _pen_os_tcp_accept \(Tcp'Listener) FfiTcpAcceptedStreamResult
import foreign "c" _pen_os_tcp_receive \(Tcp'Stream, number) FfiStringResult
import foreign "c" _pen_os_tcp_send \(Tcp'Stream, string) FfiNumberResult
import foreign "c" _pen_os_udp_bind \(string) FfiUdpSocketResult
import foreign "c" _pen_os_udp_connect \(Udp'Socket, string) FfiNoneResult
import foreign "c" _pen_os_udp_receive \(Udp'Socket) FfiStringResult
import foreign "c" _pen_os_udp_receive_from \(Udp'Socket) FfiUdpDatagramResult
import foreign "c" _pen_os_udp_send \(Udp'Socket, string) FfiNumberResult
import foreign "c" _pen_os_udp_send_to \(Udp'Socket, string, string) FfiNumberResult
import foreign "c" _pen_os_get_time \() number
import foreign "c" _pen_os_sleep \(number) none
import foreign "c" _pen_os_random_number \() number

New = \() Context {
  Context'New(
    InnerContext{
      ReadStdIn: _pen_os_read_stdin,
      ReadLimitStdIn: _pen_os_read_limit_stdin,
      WriteStdOut: _pen_os_write_stdout,
      WriteStdErr: _pen_os_write_stderr,
      OpenFile: _pen_os_open_file,
      ReadFile: _pen_os_read_file,
      ReadLimitFile: _pen_os_read_limit_file,
      WriteFile: _pen_os_write_file,
      CopyFile: _pen_os_copy_file,
      MoveFile: _pen_os_move_file,
      RemoveFile: _pen_os_remove_file,
      ReadDirectory: _pen_os_read_directory,
      CreateDirectory: _pen_os_create_directory,
      RemoveDirectory: _pen_os_remove_directory,
      GetArguments: _pen_os_get_arguments,
      GetEnvironmentVariable: _pen_os_get_environment_variable,
      Metadata: _pen_os_read_metadata,
      TcpBind: _pen_os_tcp_bind,
      TcpConnect: _pen_os_tcp_connect,
      TcpAccept: _pen_os_tcp_accept,
      TcpReceive: _pen_os_tcp_receive,
      TcpSend: _pen_os_tcp_send,
      UdpBind: _pen_os_udp_bind,
      UdpConnect: _pen_os_udp_connect,
      UdpReceive: _pen_os_udp_receive,
      UdpReceiveFrom: _pen_os_udp_receive_from,
      UdpSend: _pen_os_udp_send,
      UdpSendTo: _pen_os_udp_send_to,
      GetTime: _pen_os_get_time,
      Sleep: _pen_os_sleep,
      RandomNumber: _pen_os_random_number,
    }
  )
}
